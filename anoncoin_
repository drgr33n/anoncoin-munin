#!/usr/bin/env python
# anoncoin server stats
# drgr33n <cheezybudz@mail.i2p>
# Version 0.1 alpha
# Get stats from your anoncoin server <http://anoncoin.i2p>
# Create links to this plugin and name them
# - anoncoin_blocks
# - anoncoin_connections
# - anoncoin_difficulty

import json
import requests
import os
import sys

#GLOBALS
url = "127.0.0.1"
rpcPort = "9990"
username = "someuser"
password = "somepassword"

#DO NOT EDIT BELOW
def getData(rpcMethod):
	strUrl = "http://" + username + ":" + password + "@" + url + ":" + rpcPort
	if 'totalmoney' == rpcMethod:
		rpcInput = json.dumps({"jsonrpc":"1.0","id":rpcMethod,"method":"getinfo","params":[]})
	else:
		rpcInput = json.dumps({"jsonrpc":"1.0","id":rpcMethod,"method":rpcMethod,"params":[]})
	rpcOutput = requests.post(strUrl, rpcInput)
	rpcRaw = json.loads(rpcOutput.text)
	if 'totalmoney' == rpcMethod:
		return rpcRaw.get('result').get('moneysupply')
	else:
		return rpcRaw.get('result')

def autoconf():
        print('yes')
        exit(0)

def config():
        if 'blocks' == plugin_var:
                print('graph_title anoncoin blocks')
                print('graph_vlabel blocks')
                print('graph_info Total Blocks')
                print('graph_category anoncoin')
                print('blocks.label Total blocks')
		print('graph_args --base 1000 --lower-limit 0')
        elif 'connections' == plugin_var:
                print('graph_title anoncoin connections')
                print('graph_vlabel connections')
                print('graph_category anoncoin')
                print('connections.label Total Connections')
		print('graph_args --base 1000 --lower-limit 0')
	elif 'difficulty' == plugin_var:
                print('graph_title anoncoin difficulty')
                print('graph_vlabel Difficulty')
                print('graph_category anoncoin')
                print('difficulty.label anoncoin difficulty')
		print('graph_args --base 1000 --lower-limit 0')
        elif 'totalmoney' == plugin_var:
                print('graph_title anoncoin total money')
                print('graph_vlabel Total money')
                print('graph_category anoncoin')
                print('totalmoney.label Total money')
                print('graph_args --base 1000 --lower-limit 0')
        else:
                raise ValueError, "unknown parameter '%s'" % plugin_var
                exit(1)

def fetchBlocks():
  blocks = getData("getblockcount")
  print('blocks.value %s' % blocks )
  exit(0)

def fetchConnections():
  connection = getData("getconnectioncount")
  print('connections.value %s' % connection )
  exit(0)

def fetchDifficulty():
  difficulty = getData("getdifficulty")
  print('difficulty.value %s' % difficulty )
  exit(0)

def fetchTotalmoney():
  totalmoney = getData("totalmoney")
  print('totalmoney.value %s' % totalmoney )
  exit(0)


def fetch():
        if 'blocks' == plugin_var:
                fetchBlocks()
        elif 'connections' == plugin_var:
                fetchConnections()
        elif 'difficulty' == plugin_var:
                fetchDifficulty()
        elif 'totalmoney' == plugin_var:
                fetchTotalmoney()
	else:
                raise ValueError, "unknown parameter '%s'" % plugin_var
                exit(1)

#main
plugin_name=list(os.path.split(sys.argv[0]))[1]
plugin_var=plugin_name.split('_', 1)[-1]
if __name__ == '__main__':
  if len(sys.argv)>1 :
    if sys.argv[1]=="config" :
      config()
    elif sys.argv[1]=="autoconf" :
      autoconf()
    elif sys.argv[1]!="":
      raise ValueError, "unknown parameter '%s'" % sys.argv[1]
  fetch()


